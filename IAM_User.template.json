{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "(v5.4) AWS CFT to create a workshop user and related IAM content",
	"Metadata": {
		"AWS::CloudFormation::Interface": {
			"ParameterGroups": [
				{
					"Label": {
						"default": "Nested Stack Name"
					},
					"Parameters": [
						"StackName"
					]
				}
			]
		}
	},
	"Parameters": {
		"StackName": {
			"Type": "String",
			"Description": "A unique stack name passed by the master template"
		}
	},
	"Mappings": {
	},
	"Conditions": {
	},
	"Resources": {
		"WorkshopUser": {
			"Type": "AWS::IAM::User",
			"Properties": {
				"LoginProfile": {
					"Password": "FORTInet123!"
				},
				"UserName": {
					"Ref": "AWS::StackName"
				}
			}
		},
		"WorkshopGroup": {
			"Type": "AWS::IAM::Group"
		},
		"GroupAddition": {
			"Type": "AWS::IAM::UserToGroupAddition",
			"Properties": {
				"GroupName": {
					"Ref": "WorkshopGroup"
				},
				"Users": [
					{
						"Ref": "WorkshopUser"
					}
				]
			}
		},
		"WorkshopUserPolicy": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "InlinePolicy1",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Action": [
								"iam:CreateAccessKey",
								"iam:CreateUser",
								"iam:AttachGroupPolicy",
								"iam:AttachUserPolicy",
								"iam:DeleteGroupPolicy",
								"iam:DeleteUserPolicy",
								"iam:DetachGroupPolicy",
								"iam:DetachUserPolicy",
								"iam:PutGroupPolicy",
								"iam:PutUserPolicy",
								"iam:UpdateUser",
								"sts:AssumeRole"
							],
							"Resource": "*",
							"Effect": "Deny"
						},
						{
							"Action": [
								"autoscaling:Describe*",
								"aws-marketplace:ListReceivedLicenses",
								"aws-marketplace:Subscribe",
								"aws-marketplace:Unsubscribe",
								"aws-marketplace:ViewSubscriptions",
								"cloudformation:CreateUploadBucket",
								"cloudformation:DescribeStackEvents",
								"cloudformation:DescribeStackResources",
								"cloudformation:DescribeStacks",
								"cloudformation:GetStackPolicy",
								"cloudformation:GetTemplateSummary",
								"cloudformation:ListStacks",
								"cloudformation:ListStackResources",
								"cloudwatch:Describe*",
								"cloudwatch:GetMetricStatistics",
								"cloudwatch:ListMetrics",
								"ec2:Describe*",
								"ec2:DisableSerialConsoleAccess",
								"ec2:EnableSerialConsoleAccess",
								"ec2:GetConsoleOutput",
								"ec2:GetConsoleScreenshot",
								"ec2:GetSubnetCidrReservations",
								"ec2:SearchTransitGatewayRoutes",
								"ec2:GetSerialConsoleAccessStatus",
								"ec2:GetTransitGatewayAttachmentPropagations",
								"ec2:GetTransitGatewayRouteTableAssociations",
								"ec2:GetTransitGatewayRouteTablePropagations",
								"ec2-instance-connect:*",
								"elasticloadbalancing:Describe*",
								"s3:CreateBucket",
								"s3:PutPublicAccessBlock",
								"s3:*",
								"SNS:Publish"
							],
							"Resource": "*",
							"Effect": "Allow"
						},
						{
							"Effect": "Allow",
							"Action": "cloudformation:CreateStack",
							"Resource": "*",
							"Condition": {
								"StringEquals": {
									"cloudformation:TemplateUrl": [
										"https://fortigatecnf-prod-cloudformation-template.s3.us-west-2.amazonaws.com/fortigatecnf-cross-account-setup-cf_v7.yaml"
									]
								},
								"DateGreaterThan": {
									"aws:CurrentTime": "2023-03-01T00:00:00Z"
								},
								"DateLessThan": {
									"aws:CurrentTime": "2023-03-31T23:59:59Z"
								}
							}
						},
						{
							"Effect": "Allow",
							"Action": [
								"iam:CreateRole",
								"iam:CreatePolicy",
								"iam:GetRole",
								"iam:GetRolePolicy",
								"iam:PutRolePolicy"
							],
							"Resource": "*",
							"Condition": {
								"DateGreaterThan": {
									"aws:CurrentTime": "2023-03-01T00:00:00Z"
								},
								"DateLessThan": {
									"aws:CurrentTime": "2023-03-31T23:59:59Z"
								}
							}
						},
						{
							"Effect": "Allow",
							"Action": "iam:AttachRolePolicy",
							"Resource": "*",
							"Condition": {
								"ForAnyValue:StringEquals": {
									"iam:PolicyARN": [
										"arn:aws:iam::*:policy/FortinetFWaaSCreateVPCEndpoint",
										"arn:aws:iam::*:policy/FortinetFWaaSPushLogToS3Bucket",
										"arn:aws:iam::*:policy/FortinetFWaaSReadVPCInformation",
										"arn:aws:iam::*:policy/FortinetFWaaSSDNConnector"
									]
								},
								"DateGreaterThan": {
									"aws:CurrentTime": "2023-03-01T00:00:00Z"
								},
								"DateLessThan": {
									"aws:CurrentTime": "2023-03-31T23:59:59Z"
								}
							}
						}
					]
				},
				"Groups": [
					{
						"Ref": "WorkshopGroup"
					}
				]
			}
		}
	},
	"Outputs": {
		"AWSConsoleUsername": {
			"Description": "Username for login to AWS Console",
			"Value": {
				"Ref": "WorkshopUser"
			}
		},
		"AWSConsolePassword": {
			"Description": "Password for login to AWS Console",
			"Value": "FORTInet123!"
		},
		"AWSConsoleUrl": {
			"Value": {
				"Fn::Join": [
					"",
					[
						"https://",
						{
							"Ref": "AWS::AccountId"
						},
						".signin.aws.amazon.com/console"
					]
				]
			},
			"Description": "Url for login to AWS Console"
		}
	}
}