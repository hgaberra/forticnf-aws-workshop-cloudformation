{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "(v6.9) AWS master CFT to deploy a FortiGate CNF Immersion Day Environment",
	"Parameters": {
		"KeyName": {
			"Type": "String",
			"Description": "Name for the KeyName used to SSH into EC2 instances",
			"Default": "workshop-keypair"
		},
		"FortiAnalyzerLicenseToken": {
			"Type": "String",
			"Description": "FlexVM token for FortiAnalyzer"
		},
		"FortiManagerLicenseToken": {
			"Type": "String",
			"Description": "FlexVM token for FortiManager"
		}
	},
	"Resources": {
		"KeyPair": {
			"Type": "AWS::EC2::KeyPair",
			"Properties": {
				"KeyName": {
					"Ref": "KeyName"
				}
			}
		},
		"Application": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/SpokeVPC_Distributed_CNF_DualAZ.template.json"
				},
				"Parameters": {
					"StackName": "Application"
				}
			}
		},
		"AppInstance1": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/TrafficGenerator_ExistingVPC.template.json"
				},
				"Parameters": {
					"StackName": "AppInstance1",
					"VPCID": {
						"Fn::GetAtt": "Application.Outputs.VPCID"
					},
					"VPCCIDR": {
						"Fn::GetAtt": "Application.Outputs.VPCCIDR"
					},
					"Subnet": {
						"Fn::GetAtt": "Application.Outputs.PrivateSub1"
					},
					"InstanceIP": "10.1.3.10",
					"PubliclyAvailable": "No",
					"CIDRForInstanceAccess": "0.0.0.0/0",
					"KeyPair": {
						"Ref": "KeyPair"
					},
					"TagEnv": "prod",
					"TagAppId": "ausw1-pwf-wrk1",
					"TagAppRole": "web",
					"TagAppTier": "frontend",
					"TagSDNGroup": "group1"
				}
			}
		},
		"AppInstance2": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/TrafficGenerator_ExistingVPC.template.json"
				},
				"Parameters": {
					"StackName": "AppInstance2",
					"VPCID": {
						"Fn::GetAtt": "Application.Outputs.VPCID"
					},
					"VPCCIDR": {
						"Fn::GetAtt": "Application.Outputs.VPCCIDR"
					},
					"Subnet": {
						"Fn::GetAtt": "Application.Outputs.PrivateSub2"
					},
					"InstanceIP": "10.1.4.10",
					"PubliclyAvailable": "No",
					"CIDRForInstanceAccess": "0.0.0.0/0",
					"KeyPair": {
						"Ref": "KeyPair"
					},
					"TagEnv": "prod",
					"TagAppId": "ausw1-pwf-wrk1",
					"TagAppRole": "web",
					"TagAppTier": "frontend",
					"TagSDNGroup": "group1"
				}
			}
		},
		"Management": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/ManagementVPC_CNF_DualAZ.template.json"
				},
				"Parameters": {
					"StackName": "Management"
				}
			}
		},
		"FortiAnalyzer": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/FortiAnalyzer_FlexVM_ExistingVPC.template.json"
				},
				"Parameters": {
					"StackName": "FortiAnalyzer",
					"VPCID": {
						"Fn::GetAtt": "Management.Outputs.VPCID"
					},
					"VPCCIDR": {
						"Fn::GetAtt": "Management.Outputs.VPCCIDR"
					},
					"Subnet": {
						"Fn::GetAtt": "Management.Outputs.PublicSub1"
					},
					"FortiAnalyzerIP": "10.1.1.10",
					"PubliclyAvailable": "Yes",
					"CIDRForInstanceAccess": "0.0.0.0/0",
					"KeyPair": {
						"Ref": "KeyPair"
					},
					"FortiAnalyzerLicenseToken": {
						"Ref": "FortiAnalyzerLicenseToken"
					}
				}
			}
		},
		"FortiManager": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/FortiManager_FlexVM_ExistingVPC.template.json"
				},
				"Parameters": {
					"StackName": "FortiManager",
					"VPCID": {
						"Fn::GetAtt": "Management.Outputs.VPCID"
					},
					"VPCCIDR": {
						"Fn::GetAtt": "Management.Outputs.VPCCIDR"
					},
					"Subnet": {
						"Fn::GetAtt": "Management.Outputs.PublicSub2"
					},
					"FortiManagerIP": "10.1.2.10",
					"PubliclyAvailable": "Yes",
					"CIDRForInstanceAccess": "0.0.0.0/0",
					"KeyPair": {
						"Ref": "KeyPair"
					},
					"FortiManagerLicenseToken": {
						"Ref": "FortiManagerLicenseToken"
					}
				}
			}
		},
		"NiktoScanner": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/NiktoScanner_ExistingVPC.template.json"
				},
				"Parameters": {
					"StackName": "NiktoScanner",
					"VPCID": {
						"Fn::GetAtt": "Management.Outputs.VPCID"
					},
					"VPCCIDR": {
						"Fn::GetAtt": "Management.Outputs.VPCCIDR"
					},
					"Subnet": {
						"Fn::GetAtt": "Management.Outputs.PublicSub2"
					},
					"InstanceIP": "10.1.2.20",
					"PubliclyAvailable": "Yes",
					"DNSName": {
						"Fn::GetAtt": "PublicNLB1.Outputs.DNSName"
					},
					"CIDRForInstanceAccess": "0.0.0.0/0",
					"KeyPair": {
						"Ref": "KeyPair"
					},
					"TagEnv": "prod",
					"TagAppId": "ausw1-pwf-wrk1",
					"TagAppRole": "scanner",
					"TagAppTier": "pentest",
					"TagSDNGroup": "group10"
				}
			}
		},
		"PublicNLB1": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/ELBv2_ExistingVPC.template.json"
				},
				"Parameters": {
					"StackName": "PublicNLB1",
					"VPCID": {
						"Fn::GetAtt": "Application.Outputs.VPCID"
					},
					"PubliclyAvailable": "Yes",
					"ELBv2Type": "network",
					"Subnet1": {
						"Fn::GetAtt": "Application.Outputs.PublicSub1"
					},
					"Subnet2": {
						"Fn::GetAtt": "Application.Outputs.PublicSub2"
					},
					"Target1": {
						"Fn::GetAtt": "AppInstance1.Outputs.InstanceID"
					},
					"Target2": {
						"Fn::GetAtt": "AppInstance2.Outputs.InstanceID"
					},
					"Encrypted": "Yes"
				}
			}
		},
		"LambdaRouteMap": {
			"Type": "AWS::CloudFormation::Stack",
			"Properties": {
				"TemplateURL": {
					"Fn::Sub": "https://hacorp-us-east-1.s3.amazonaws.com/forticnf-aws-workshop-cloudformation/Lambda_RouteMap.template.json"
				},
				"Parameters": {
					"StackName": "LambdaRouteMap",
					"RouteMap": {
						"Fn::Join": [
							"",
							[
								{
									"Fn::GetAtt": "Application.Outputs.GwlbeSub1"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.IgwRouteTable"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.VPCID"
								},
								":",
								"10.1.1.0/24",
								",",
								{
									"Fn::GetAtt": "Application.Outputs.GwlbeSub2"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.IgwRouteTable"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.VPCID"
								},
								":",
								"10.1.2.0/24",
								",",
								{
									"Fn::GetAtt": "Application.Outputs.GwlbeSub1"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.Public1RouteTable"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.VPCID"
								},
								":",
								"0.0.0.0/0",
								",",
								{
									"Fn::GetAtt": "Application.Outputs.GwlbeSub2"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.Public2RouteTable"
								},
								":",
								{
									"Fn::GetAtt": "Application.Outputs.VPCID"
								},
								":",
								"0.0.0.0/0"
							]
						]
					}
				}
			}
		}
	},
	"Outputs": {
		"URLforApp1": {
			"Value": {
				"Fn::Join": [
					"",
					[
						"http://",
						{
							"Fn::GetAtt": "PublicNLB1.Outputs.DNSName"
						}
					]
				]
			},
			"Description": "URL for App1"
		},
		"EncryptedURLforApp1": {
			"Value": {
				"Fn::Join": [
					"",
					[
						"https://",
						{
							"Fn::GetAtt": "PublicNLB1.Outputs.DNSName"
						}
					]
				]
			},
			"Description": "Encrypted URL for App1"
		},
		"FortiAnalyzerLoginURL": {
			"Value": {
				"Fn::GetAtt": "FortiAnalyzer.Outputs.FortiAnalyzerLoginURL"
			},
			"Description": "Login URL for FortiAnalyzer"
		},
		"FortiManagerLoginURL": {
			"Value": {
				"Fn::GetAtt": "FortiManager.Outputs.FortiManagerLoginURL"
			},
			"Description": "Login URL for FortiManager"
		}
	}
}